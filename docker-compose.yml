version: '3.1'
services:
  db:
    image: postgres:12.3-alpine
    container_name: judoassistant-postgres
    volumes:
      - postgres:/var/lib/postgresql/data
      - ./db-init.sh:/docker-entrypoint-initdb.d/init-user-db.sh:ro
    environment:
      POSTGRES_USER: ${ROOT_USER}
      POSTGRES_PASSWORD: ${POSTGRES_ROOT_PASSWORD}
      POSTGRES_DB: ${ROOT_USER}
      POSTGRES_JUDOASSISTANT_PASSWORD: ${POSTGRES_JUDOASSISTANT_PASSWORD}
  backend:
    image: judoassistant/judoassistant-web:latest
    container_name: judoassistant-backend
    volumes:
      - judoassistant-backend:/var/judoassistant
    environment:
      POSTGRES_HOST: judoassistant-postgres
      POSTGRES_DB: judoassistant
      POSTGRES_USER: judoassistant
      POSTGRES_PASSWORD: ${POSTGRES_JUDOASSISTANT_PASSWORD}
      THREAD_COUNT: ${BACKEND_THREAD_COUNT}
    depends_on:
      - db
    deploy:
      restart_policy:
        condition: on-failure
        max_attempts: 3
  nginx:
    image: nginx:alpine
    container_name: judoassistant-nginx
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./sites-enabled:/etc/nginx/sites-enabled:ro
      - /var/www/judoassistant.com/html:/var/www/judoassistant.com/html:ro
      - /var/www/live.judoassistant.com/html:/var/www/live.judoassistant.com/html:ro
      - /etc/letsencrypt:/etc/letsencrypt
    ports:
      - "80:80"
      - "443:443"
      - "9000:9000"
    depends_on:
      - backend
volumes:
  postgres:
  judoassistant-backend:

